name: "Test And Upload"

on:
  push:
    branches:
      - master
      - release
  pull_request:
    branches:
      - master

jobs:
  test-and-upload:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [
          windows
        ]
        node: [
          17
        ]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4.1.7

      - name: "Setup Node.js environment"
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://npm.pkg.github.com/

      - name: "Get package info"
        id: package-info
        uses: luizfelipelaviola/get-package-info@v1
        with:
          path: ./packages/mitmproxy

      - name: "Print"
        run: |
          echo "version = ${{ steps.package-info.outputs.version }}";
          echo "github.ref_type = ${{ github.ref_type }}";
          echo "github.ref = ${{ github.ref }}";
          echo "github.ref_name = ${{ github.ref_name }}";

      - name: "npm install -g lerna@6/yarn"
        run: |
          echo "======================================================================";
          echo "npm install -g lerna@6";
          echo "--------------------";
          npm install -g lerna@6;

          echo "======================================================================";
          echo "npm install -g yarn";
          echo "--------------------";
          npm install -g yarn;

      - name: "npm -v | yarn -v | lerna -v"
        run: |
          echo "======================================================================";
          echo "npm -v";
          echo "--------------------";
          npm -v;

          echo "======================================================================";
          echo "yarn -v";
          echo "--------------------";
          yarn -v;

          echo "======================================================================";
          echo "lerna -v";
          echo "--------------------";
          lerna -v;

      - name: "lerna bootstrap"
        run: |
          echo "======================================================================";
          dir || ls -lah;

          echo "======================================================================";
          echo "lerna bootstrap --npm-client=yarn";
          echo "--------------------";
          lerna bootstrap --npm-client=yarn;

      - name: "npm run electron:build for node16"
        if: ${{ matrix.node == '16' }}
        run: |
          echo "======================================================================";
          echo "cd packages/gui";
          echo "--------------------";
          cd packages/gui;
          dir || ls -lah;

          echo "======================================================================";
          echo "npm run electron:build";
          echo "--------------------";
          npm run electron:build;

          echo "======================================================================";
          echo "cd dist_electron";
          echo "--------------------";
          cd dist_electron;
          dir || ls -lah;

          echo "======================================================================";
          echo "cd ../../../";
          echo "--------------------";
          cd ../../../;
          dir || ls -lah;

      - name: "npm run electron:build for node17"
        if: ${{ matrix.node != '16' }}
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          echo "======================================================================";
          echo "cd packages/gui";
          echo "--------------------";
          cd packages/gui;
          dir || ls -lah;

          echo "======================================================================";
          echo "npm run electron:build";
          echo "--------------------";
          npm run electron:build;

          echo "======================================================================";
          echo "cd dist_electron";
          echo "--------------------";
          cd dist_electron;
          dir || ls -lah;

          echo "======================================================================";
          echo "cd ../../../";
          echo "--------------------";
          cd ../../../;
          dir || ls -lah;

      - name: "Upload DevSidecar-${{ steps.package-info.outputs.version }}.myself-node${{ matrix.node }}.exe - Windows"
        uses: actions/upload-artifact@v4.4.0
        if: ${{ matrix.os == 'windows' }}
        with:
          path: packages/gui/dist_electron/DevSidecar-${{ steps.package-info.outputs.version }}.myself.exe
          name: "DevSidecar-${{ steps.package-info.outputs.version }}.myself-node${{ matrix.node }}.exe"
          if-no-files-found: error

  # job 2
  download-and-release:
    if: ${{ github.ref_name == 'release' }}
    runs-on: ubuntu-latest
    needs:
      - test-and-upload
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4.1.7

      - name: "Get package info"
        id: package-info
        uses: luizfelipelaviola/get-package-info@v1
        with:
          path: ./packages/mitmproxy

      - name: "Make 'release' dir"
        run: mkdir release

      # Download artifacts with node17
      - name: "Download DevSidecar-${{ steps.package-info.outputs.version }}.myself-node17.exe - Windows"
        uses: actions/download-artifact@v4.1.8
        with:
          name: DevSidecar-${{ steps.package-info.outputs.version }}.myself-node17.exe
          path: release
      - name: "Rename 'release/DevSidecar-${{ steps.package-info.outputs.version }}.myself.*' to 'release/DevSidecar-${{ steps.package-info.outputs.version }}.myself-node17.*'"
        run: |
          mv release/DevSidecar-${{ steps.package-info.outputs.version }}.myself.exe      release/DevSidecar-${{ steps.package-info.outputs.version }}.myself-node17.exe;

      - name: "Print files from 'release' dir"
        run: |
          ls -lah release;

      - name: "Create a draft release"
        uses: wangliang181230/github-action-ghr@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GHR_PATH: release/
          GHR_TITLE: ${{ github.ref_name }}
          GHR_REPLACE: true
          GHR_DRAFT: true
